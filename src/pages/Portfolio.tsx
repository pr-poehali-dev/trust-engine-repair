import { useState } from 'react';
import NavigationSection from '@/components/home/NavigationSection';
import FooterSection from '@/components/home/FooterSection';
import ContactForm from '@/components/ContactForm';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { Link } from 'react-router-dom';

export default function Portfolio() {
  const projects = [
    {
      id: 'volvo-d6-350',
      title: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Volvo Penta D6-350',
      description: '–ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è —Å –∑–∞–º–µ–Ω–æ–π –≤—Å–µ—Ö –∏–∑–Ω–æ—à–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–µ–π —Å–∏—Å—Ç–µ–º—ã –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è',
      image: '/img/b05150a3-d117-43c9-aa59-ec3a63c68f5d.jpg',
      duration: '14 –¥–Ω–µ–π',
      budget: '‚ÇΩ 485 000',
      type: '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç',
      tags: ['Volvo Penta', 'D6-350', '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç'],
      status: '–ó–∞–≤–µ—Ä—à–µ–Ω',
      year: '2024'
    },
    {
      id: 'mercruiser-5-7l',
      title: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ MerCruiser 5.7L',
      description: '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –¥–≤–∏–≥–∞—Ç–µ–ª—è MerCruiser —Å –∑–∞–º–µ–Ω–æ–π –ø–æ—Ä—à–Ω–µ–≤–æ–π –≥—Ä—É–ø–ø—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±–ª–æ–∫–∞ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤',
      image: '/img/296a2fc5-c78b-4f2f-a785-0cd8e650a619.jpg',
      duration: '21 –¥–µ–Ω—å',
      budget: '‚ÇΩ 420 000',
      type: '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç',
      tags: ['MerCruiser', '5.7L', '–ü–æ—Ä—à–Ω–µ–≤–∞—è –≥—Ä—É–ø–ø–∞'],
      status: '–ó–∞–≤–µ—Ä—à–µ–Ω',
      year: '2024'
    },
    {
      id: 'yamaha-250hp',
      title: '–†–µ–º–æ–Ω—Ç Yamaha 250HP',
      description: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–≤–µ—Å–Ω–æ–≥–æ –º–æ—Ç–æ—Ä–∞ —Å –∑–∞–º–µ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –∏ —Ä–µ–º–æ–Ω—Ç–æ–º —Ç–æ–ø–ª–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã',
      image: '/img/c79d6585-a600-4aea-9d31-53374ad1cad5.jpg',
      duration: '10 –¥–Ω–µ–π',
      budget: '‚ÇΩ 180 000',
      type: '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–º–æ–Ω—Ç',
      tags: ['Yamaha', '250HP', '–ü–æ–¥–≤–µ—Å–Ω–æ–π –º–æ—Ç–æ—Ä'],
      status: '–ó–∞–≤–µ—Ä—à–µ–Ω',
      year: '2024'
    },
    {
      id: 'volvo-d4-260',
      title: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Volvo Penta D4-260',
      description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã –≤–ø—Ä—ã—Å–∫–∞ —Ç–æ–ø–ª–∏–≤–∞',
      image: '/img/c5cc0155-a2cd-402d-8127-cdf0d98da013.jpg',
      duration: '3 –¥–Ω—è',
      budget: '‚ÇΩ 45 000',
      type: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞',
      tags: ['Volvo Penta', 'D4-260', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞'],
      status: '–ó–∞–≤–µ—Ä—à–µ–Ω',
      year: '2024'
    },
    {
      id: 'indmar-raptor-570',
      title: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ Indmar Raptor 570',
      description: '–ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è –¥–ª—è –≤–µ–π–∫–±–æ—Ä–¥–∏–Ω–≥–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º –º–æ—â–Ω–æ—Å—Ç–∏',
      image: '/img/265424a9-abd7-4a7c-a05b-5707bb54352d.jpg',
      duration: '18 –¥–Ω–µ–π',
      budget: '‚ÇΩ 520 000',
      type: '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç',
      tags: ['Indmar', 'Raptor 570', '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π'],
      status: '–í —Ä–∞–±–æ—Ç–µ',
      year: '2024'
    },
    {
      id: 'mercury-verado-350',
      title: '–†–µ–º–æ–Ω—Ç Mercury Verado 350',
      description: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–≤–µ—Å–Ω–æ–≥–æ –º–æ—Ç–æ—Ä–∞ —Å –∑–∞–º–µ–Ω–æ–π —Ç—É—Ä–±–æ–∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞ –∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–¥–¥—É–≤–∞',
      image: '/img/43a72e8a-017f-4e19-b4a0-fb8377eb2457.jpg',
      duration: '16 –¥–Ω–µ–π',
      budget: '‚ÇΩ 380 000',
      type: '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç',
      tags: ['Mercury', 'Verado 350', '–¢—É—Ä–±–æ–Ω–∞–¥–¥—É–≤'],
      status: '–í —Ä–∞–±–æ—Ç–µ',
      year: '2024'
    }
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case '–ó–∞–≤–µ—Ä—à–µ–Ω':
        return 'bg-green-100 text-green-800 border-green-200';
      case '–í —Ä–∞–±–æ—Ç–µ':
        return 'bg-blue-100 text-blue-800 border-blue-200';
      default:
        return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const getTypeColor = (type: string) => {
    switch (type) {
      case '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç':
        return 'bg-red-100 text-red-800 border-red-200';
      case '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–º–æ–Ω—Ç':
        return 'bg-orange-100 text-orange-800 border-orange-200';
      case '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞':
        return 'bg-purple-100 text-purple-800 border-purple-200';
      default:
        return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [contactFormOpen, setContactFormOpen] = useState(false);

  return (
    <div className="min-h-screen bg-gradient-to-br from-white via-primary/5 to-primary/10">
      <NavigationSection
        mobileMenuOpen={mobileMenuOpen}
        onMobileMenuToggle={() => setMobileMenuOpen(!mobileMenuOpen)}
        onContactClick={() => setContactFormOpen(true)}
      />

      {/* Header */}
      <section className="py-20 px-4 bg-gradient-to-br from-primary/5 via-white to-marine-light/20 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-primary/3 via-transparent to-marine-blue/3 opacity-60"></div>
        <div className="max-w-7xl mx-auto relative z-10 text-center">
          <Badge className="bg-primary/10 text-primary border-primary/20 text-sm font-semibold px-4 py-2 rounded-full mb-6">
            üèÜ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç
          </Badge>
          <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold text-gray-900 leading-tight mb-6">
            –ù–∞—à–∏ <span className="text-primary">—Ä–∞–±–æ—Ç—ã</span>
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto mb-8">
            –ü—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã—Ö –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π. 
            –ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç ‚Äî —ç—Ç–æ –∏—Å—Ç–æ—Ä–∏—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ –∂–∏–∑–Ω–∏.
          </p>
          <div className="flex flex-wrap justify-center gap-4 mb-12">
            <Badge variant="outline" className="text-gray-600 border-gray-300">
              –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {projects.length}
            </Badge>
            <Badge variant="outline" className="text-green-600 border-green-300">
              –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {projects.filter(p => p.status === '–ó–∞–≤–µ—Ä—à–µ–Ω').length}
            </Badge>
            <Badge variant="outline" className="text-blue-600 border-blue-300">
              –í —Ä–∞–±–æ—Ç–µ: {projects.filter(p => p.status === '–í —Ä–∞–±–æ—Ç–µ').length}
            </Badge>
          </div>
        </div>
      </section>

      {/* Projects Grid */}
      <section className="py-20 px-4 bg-gradient-to-br from-primary/5 via-white to-marine-light/20 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-primary/3 via-transparent to-marine-blue/3 opacity-60"></div>
        <div className="max-w-7xl mx-auto relative z-10">
          <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-8">
            {projects.map((project) => (
              <Card key={project.id} className="group hover:shadow-xl transition-all duration-300 hover:-translate-y-2 border-0 bg-white rounded-2xl overflow-hidden">
                <div className="relative overflow-hidden">
                  <img 
                    src={project.image} 
                    alt={project.title}
                    className="w-full h-56 object-cover transition-transform duration-300 group-hover:scale-105"
                  />
                  <div className="absolute top-4 left-4 flex flex-wrap gap-2">
                    <Badge className={`text-xs px-2 py-1 ${getStatusColor(project.status)}`}>
                      {project.status}
                    </Badge>
                  </div>
                  <div className="absolute top-4 right-4">
                    <Badge className={`text-xs px-2 py-1 ${getTypeColor(project.type)}`}>
                      {project.type}
                    </Badge>
                  </div>
                  <div className="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent"></div>
                </div>
                
                <CardHeader className="pb-4">
                  <CardTitle className="text-xl font-bold text-gray-900 group-hover:text-primary transition-colors duration-300 leading-tight">
                    {project.title}
                  </CardTitle>
                  <p className="text-gray-600 text-sm line-clamp-2">
                    {project.description}
                  </p>
                </CardHeader>
                
                <CardContent className="space-y-6">
                  {/* Project Stats */}
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div className="flex items-center gap-2 text-gray-600">
                      <Icon name="Clock" size={16} className="text-primary" />
                      <span>{project.duration}</span>
                    </div>
                    <div className="flex items-center gap-2 text-gray-600">
                      <Icon name="DollarSign" size={16} className="text-primary" />
                      <span>{project.budget}</span>
                    </div>
                    <div className="flex items-center gap-2 text-gray-600">
                      <Icon name="Calendar" size={16} className="text-primary" />
                      <span>{project.year}</span>
                    </div>
                    <div className="flex items-center gap-2 text-gray-600">
                      <Icon name="Wrench" size={16} className="text-primary" />
                      <span>{project.type}</span>
                    </div>
                  </div>
                  
                  {/* Tags */}
                  <div className="flex flex-wrap gap-2">
                    {project.tags.map((tag, i) => (
                      <Badge key={i} variant="outline" className="text-xs text-gray-600 border-gray-300">
                        {tag}
                      </Badge>
                    ))}
                  </div>
                  
                  {/* View Project Button */}
                  {(['volvo-d6-350', 'mercruiser-5-7l'].includes(project.id)) ? (
                    <Link to={`/projects/${project.id}`}>
                      <Button className="w-full bg-primary hover:bg-primary/90 shadow-lg hover:shadow-xl transition-all duration-300">
                        <Icon name="Eye" size={16} className="mr-2" />
                        –°–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç
                      </Button>
                    </Link>
                  ) : (
                    <Button 
                      className="w-full bg-gray-500 hover:bg-gray-600 shadow-lg transition-all duration-300"
                      disabled
                    >
                      <Icon name="Clock" size={16} className="mr-2" />
                      {project.status === '–í —Ä–∞–±–æ—Ç–µ' ? '–ü—Ä–æ–µ–∫—Ç –≤ —Ä–∞–±–æ—Ç–µ' : '–°–∫–æ—Ä–æ –¥–æ—Å—Ç—É–ø–µ–Ω'}
                    </Button>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 px-4 bg-primary">
        <div className="max-w-4xl mx-auto text-center text-white">
          <h2 className="text-3xl sm:text-4xl font-bold mb-6">
            –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –≤–∞—à –ø—Ä–æ–µ–∫—Ç –ø–æ–ø–∞–ª –≤ –Ω–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ?
          </h2>
          <p className="text-xl mb-8 opacity-90">
            –î–æ–≤–µ—Ä—å—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" variant="secondary" className="px-8 py-4 text-lg font-semibold" onClick={() => setContactFormOpen(true)}>
              <Icon name="Phone" size={20} className="mr-2" />
              –û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
            </Button>
            <Button 
              size="lg" 
              variant="outline" 
              className="border-white text-white hover:bg-white hover:text-primary px-8 py-4 text-lg font-semibold"
              onClick={() => window.location.href = '/services/restore'}
            >
              <Icon name="RefreshCw" size={20} className="mr-2" />
              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥ –∫–ª—é—á
            </Button>
          </div>
        </div>
      </section>

      <FooterSection />

      {/* Contact Form Modal */}
      <ContactForm 
        isOpen={contactFormOpen}
        onClose={() => setContactFormOpen(false)}
      />
    </div>
  );
}